plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.tw'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.1.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

tasks.jacocoTestReport {
	dependsOn test

	reports {
		html.required.set(true)
		html.outputLocation = layout.buildDirectory.dir('jacoco')
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'com/tw/model/**',
					'com/tw/exception/**',
					'com/tw/personalfinancetracker/PersonalFinanceTrackerApplication.java'
			])
		}))
	}

	finalizedBy(tasks.jacocoTestCoverageVerification)
}


tasks.jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = "0.75".toBigDecimal()
			}
		}
	}
}

jacoco {
	toolVersion = "0.8.10"
}

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
	}
	finalizedBy jacocoTestReport // Generate JaCoCo test coverage report after running tests
}

